#!/bin/bash
exec >cyclictest-client-stderrout.txt
exec 2>&1

. /usr/bin/cyclictest-base || (echo "/usr/bin/cyclictest-base not found"; exit 1)

dump_runtime
validate_label
validate_sw_prereqs

if [ -z "$WORKLOAD_CPUS" ]; then
    exit_error "WORKLOAD_CPUS is not defined.  This must be defined to run cyclictest"
else
    echo "WORKLOAD_CPUS: $WORKLOAD_CPUS"
fi
if [ -z "HK_CPUS" ]; then
    exit_error "HK_CPUS is not defined.  This must be defined to run cyclictest"
else
    echo "HK_CPUS: $HK_CPUS"
fi

# defaults
duration=60
policy=fifo
interval=100
smt="on"

longopts="duration:,priority:,policy:,interval:,smt:"
opts=$(getopt -q -o "D:p:i:s:" --longoptions "$longopts" -n "getopt.sh" -- "$@");
eval set -- "$opts";
while true; do
    case "$1" in
        -D|--duration)
            shift
            duration=$1
            shift
            ;;
        -p|--priority)
            shift
            priority=$1
            shift
            ;;
        --policy)
            shift
            policy=$1
            shift
            ;;
        -i|--interval)
            shift
            interval=$1
            shift
            ;;
        -s|--smt)
            shift
            smt=$1
            shift
            ;;
        --)
            shift;
            break
            ;;
        *)
            shift
            ;;
    esac
done

# adjust CPUs to use
cpu_str=""
for cpu in $(echo $WORKLOAD_CPUS | sed -e "s/,/ /g"); do
    cpu_str+=" --cpu $cpu"
done
cmd="${TOOLBOX_HOME}/bin/get-cpus-ordered.py --smt ${smt} ${cpu_str}"
echo "about to run: ${cmd}"
CMD_OUTPUT=$(${cmd})
echo -e "${CMD_OUTPUT}"
WORKLOAD_CPUS=$(echo -e "${CMD_OUTPUT}" | grep "final cpus:" | awk '{ print $3 }')
echo "WORLOAD_CPUS: ${WORKLOAD_CPUS}"

cpu_str=""
for cpu in $(echo $HK_CPUS | sed -e "s/,/ /g"); do
    cpu_str+=" --cpu $cpu"
done
cmd="${TOOLBOX_HOME}/bin/get-cpus-ordered.py --smt ${smt} ${cpu_str}"
echo "about to run: ${cmd}"
CMD_OUTPUT=$(${cmd})
echo -e "${CMD_OUTPUT}"
HK_CPUS=$(echo -e "${CMD_OUTPUT}" | grep "final cpus:" | awk '{ print $3 }')
echo "HK_CPUS: ${HK_CPUS}"


cmd="taskset -c $WORKLOAD_CPUS,$HK_CPUS /usr/bin/cyclictest --policy $policy -i $interval -H 1000 --histfile histogram.txt -D $duration -q -a ${WORKLOAD_CPUS} -t"
echo "About to run: $cmd"
date +%s.%N >begin.txt
$cmd >cyclictest-bin-stderrout.txt 2>&1
rc=$?
date +%s.%N >end.txt
if [ $rc -gt 0 ]; then
    exit_error "`cat cyclictest-bin-stderrout.txt`"
fi
    
